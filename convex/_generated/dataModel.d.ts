/* eslint-disable */
/**
 * Generated data model types.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.28.0.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import type {
  AnyDataModel,
  GenericId,
  DocumentByName,
  TableNamesInDataModel,
  SystemTableNames,
  IndexNames,
} from "convex/server";

export type Id<T extends TableNames> = GenericId<T>;

export type TableNames = "photos" | "users";

export type Doc<TableName extends TableNames> = {
  photos: {
    _id: Id<"photos">;
    _creationTime: number;
    imageUrl: string;
    storageId: string;
    userId: string;
    username: string;
    userAvatar?: string;
    likes: number;
    likedBy: string[];
    createdAt: number;
  };
  users: {
    _id: Id<"users">;
    _creationTime: number;
    userId: string;
    username: string;
    avatar?: string;
  };
}[TableName];

export interface DataModel {
  photos: {
    document: Doc<"photos">;
    fieldPaths:
      | "_id"
      | "_creationTime"
      | "imageUrl"
      | "storageId"
      | "userId"
      | "username"
      | "userAvatar"
      | "likes"
      | "likedBy"
      | "createdAt";
    indexes: {
      by_creation_time: ["createdAt"];
      by_user: ["userId"];
    };
    searchIndexes: {};
    vectorIndexes: {};
  };
  users: {
    document: Doc<"users">;
    fieldPaths:
      | "_id"
      | "_creationTime"
      | "userId"
      | "username"
      | "avatar";
    indexes: {
      by_user_id: ["userId"];
    };
    searchIndexes: {};
    vectorIndexes: {};
  };
}
